parameters:
    task_read_repository_type: filesystem
    #    task_read_repository_type: mysql
    #    task_read_repository_type: memory
    task_write_repository_type: filesystem
    #    task_write_repository_type: mysql
    #    task_write_repository_type: memory
    filesystem_db_dir: '%kernel.project_dir%/var/db.json'

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    App\:
        resource: '../src/'
        exclude:
            - '../src/Kernel.php'

    App\Task\Presentation\Http\Rest\:
        resource: '../src/Task/Presentation/Http/Rest'
        tags: ['controller.service_arguments']

    kernel.event_listener:
        class: App\Core\Business\Service\Event\ConsoleExceptionListener
        tags:
            - { name: kernel.event_listener, event: console.error }

    App\Core\Business\Service\Event\HttpExceptionEventListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 400, method: onKernelException}

    App\Core\Business\Service\Response\Resolver\ErrorResponseBuilderResolver:
        calls:
            - ['addBuilder', ['@App\Core\Business\Service\Response\ValidationErrorResponseBuilder']]
            - ['addBuilder', ['@App\Core\Business\Service\Response\NotFoundErrorResponseBuilder']]
            - ['addBuilder', ['@App\Core\Business\Service\Response\InternalServerErrorResponseBuilder']]

    App\Task\Infrastructure\Repository\Resolver\TaskReadRepositoryResolver:
        arguments:
            $type: '%task_read_repository_type%'
        calls:
            - ['addRepository', ['@App\Task\Infrastructure\Repository\FilesystemTaskRepository']]
            - ['addRepository', ['@App\Task\Infrastructure\Repository\MysqlTaskRepository']]
            - ['addRepository', ['@App\Task\Infrastructure\Repository\InMemoryTaskRepository']]

    App\Task\Infrastructure\Repository\Resolver\TaskWriteRepositoryResolver:
        arguments:
            $type: '%task_write_repository_type%'
        calls:
            - ['addRepository', ['@App\Task\Infrastructure\Repository\FilesystemTaskRepository']]
            - ['addRepository', ['@App\Task\Infrastructure\Repository\MysqlTaskRepository']]
            - ['addRepository', ['@App\Task\Infrastructure\Repository\InMemoryTaskRepository']]

    App\Task\Infrastructure\Repository\InMemoryTaskRepository:
        calls:
            - ['setExampleData']

    App\Task\Infrastructure\Repository\MysqlTaskRepository:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'

    App\Task\Infrastructure\Repository\FilesystemTaskRepository:
        arguments:
            $dbFile: '%filesystem_db_dir%'

    App\Core\Business\Service\CommandBus:
        calls:
            - ['registerHandler', ['App\Task\Business\Command\AddTaskCommand', '@App\Task\Business\Command\Handler\AddTaskCommandHandler']]
            - ['registerHandler', ['App\Task\Business\Command\ChangeTaskStatusCommand', '@App\Task\Business\Command\Handler\ChangeTaskStatusCommandHandler']]
            - ['registerHandler', ['App\Task\Business\Command\DeleteTaskCommand', '@App\Task\Business\Command\Handler\DeleteTaskCommandHandler']]
